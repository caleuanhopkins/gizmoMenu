html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

@import 'framework/grid';

$font-family: Helvetica, Arial, sans-serif;
$default-font-size: 16; //Default

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem-fallback($property, $values...) {
  $context: $default-font-size;
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value/$context}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

html, body, body, button, h1, h2, h3, h4, h5, h6, input, input[type="button"], input[type="reset"], input[type="submit"], label, select, ul, li, ol, p, span, strong, a{
	font-family: $font-family;
	font-size:	$default-font-size;
	  -webkit-font-smoothing: antialiased;
	  -moz-osx-font-smoothing: grayscale;
}

$font-family: Helvetica, Arial, sans-serif;
$default-font-size: 16; //Default

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem-fallback($property, $values...) {
  $context: $default-font-size;
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value/$context}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

header{

	@include rem-fallback(padding-bottom, 50);

	nav{
		&#theMenu{

			ul{
				text-align:center;

				li{
					display:inline-block;
					
					a{
						display:block;
						@include rem-fallback(padding, 10, 15);
					}
				}
			}

		}
	}

    &.gzPeek{
      top:0;
      @include rem-fallback(padding, 25, 0);
      border-bottom:1px solid $color-hr;
    }
}

#main{
	height:2000px;
	display:block;
}

@media only screen and (max-width: 480px) {

	body{
		border-left:1px solid black;
	}
	
	header{
		
		nav{
			&#theMenu{
				background:pink;
			}
		}
		
		.mobileNav{
			margin: 0 auto;
			max-width:60px;
			text-align:center;
			border:1px solid;
		}
	}

}